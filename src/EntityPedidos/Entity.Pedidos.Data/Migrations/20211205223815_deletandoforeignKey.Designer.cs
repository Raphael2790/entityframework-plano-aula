// <auto-generated />
using System;
using Entity.Pedidos.Data.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entity.Pedidos.Data.Migrations
{
    [DbContext(typeof(PedidosDbContexto))]
    [Migration("20211205223815_deletandoforeignKey")]
    partial class deletandoforeignKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasCharSet("utf8mb4")
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.CupomDesconto", b =>
                {
                    b.Property<int>("CupomDescontoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cupom_desconto_id");

                    b.Property<sbyte>("Aplicado")
                        .HasColumnType("tinyint")
                        .HasColumnName("aplicado");

                    b.Property<DateTime>("AplicadoEm")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("aplicado_em");

                    b.Property<sbyte>("Ativo")
                        .HasColumnType("tinyint")
                        .HasColumnName("ativo");

                    b.Property<string>("CodigoCupom")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo_cupom");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("criado_em");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_expiracao");

                    b.Property<decimal?>("PercentualDesconto")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("percentual_desconto");

                    b.Property<int>("Quantidade")
                        .HasPrecision(6)
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<int>("TipoCupomDesconto")
                        .HasColumnType("int")
                        .HasColumnName("tipo_cupom_desconto");

                    b.Property<decimal?>("ValorDesconto")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("valor_desconto");

                    b.HasKey("CupomDescontoId")
                        .HasName("PK_cupons_descontos_id");

                    b.ToTable("cupons_descontos");
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("complemento");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("estado");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("logradouro");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("numero");

                    b.HasKey("Id")
                        .HasName("PK_enderecos");

                    b.HasIndex(new[] { "Id" }, "IX_PK_enderecoid");

                    b.ToTable("enderecos");
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(150)")
                        .HasColumnName("codigo");

                    b.Property<int?>("CupomDescontoId")
                        .HasColumnType("int")
                        .HasColumnName("cupom_desconto_id");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_pedido");

                    b.Property<decimal>("Desconto")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("desconto");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int")
                        .HasColumnName("endereco_id");

                    b.Property<int>("PedidoStatus")
                        .HasColumnType("int")
                        .HasColumnName("pedido_status");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("valor_total");

                    b.HasKey("Id")
                        .HasName("PK_pedidos");

                    b.HasIndex("EnderecoId");

                    b.HasIndex(new[] { "CupomDescontoId" }, "IX_pedido_cupom_desconto_id");

                    b.HasIndex(new[] { "ClienteId" }, "IX_pedidos_cliente_id");

                    b.ToTable("pedidos");
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.PedidoItem", b =>
                {
                    b.Property<int>("PedidoItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pedido_item_id");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nome_produto");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("pedido_id");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("produto_id");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<decimal>("ValorUnitario")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("valor_unitario");

                    b.HasKey("PedidoItemId")
                        .HasName("PK_pedidos_itens");

                    b.HasIndex(new[] { "PedidoId" }, "IX_pedidos_itens_pedido_id");

                    b.HasIndex(new[] { "ProdutoId" }, "IX_pedidos_itens_produto_id");

                    b.ToTable("pedidos_itens");
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.Pedido", b =>
                {
                    b.HasOne("Entity.Pedidos.Domain.Entidades.CupomDesconto", "CupomDesconto")
                        .WithMany("Pedidos")
                        .HasForeignKey("CupomDescontoId");

                    b.HasOne("Entity.Pedidos.Domain.Entidades.Endereco", "Endereco")
                        .WithMany("Pedidos")
                        .HasForeignKey("EnderecoId")
                        .HasConstraintName("FK_pedidos_enderecos_endereco_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CupomDesconto");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.PedidoItem", b =>
                {
                    b.HasOne("Entity.Pedidos.Domain.Entidades.Pedido", "Pedido")
                        .WithMany("PedidoItens")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("FK_pedido_itens_pedidos_pedido_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.CupomDesconto", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.Endereco", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Entity.Pedidos.Domain.Entidades.Pedido", b =>
                {
                    b.Navigation("PedidoItens");
                });
#pragma warning restore 612, 618
        }
    }
}
